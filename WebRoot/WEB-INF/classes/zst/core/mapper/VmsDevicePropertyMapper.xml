<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zst.core.dao.VmsDevicePropertyMapper" >
  <resultMap id="BaseResultMap" type="zst.core.entity.VmsDeviceProperty" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="deviceType_id" property="devicetypeId" jdbcType="INTEGER" />
    <result column="deviceItem_id" property="deviceitemId" jdbcType="INTEGER" />
    <result column="orderNumber" property="orderNumber" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
  </resultMap>
  
  <!-- 单表查询 -->
  <sql id="Base_Column_List" >
    id, deviceType_id, deviceItem_id, orderNumber, group_id
  </sql>
  <!-- 单表查询条件 -->
   <sql id="Example_Where_Clause">
	where 1=1
	<if test="id != null ">
		AND id = #{id,jdbcType=INTEGER}
	</if>
	<if test="devicetypeId != null ">
		AND deviceType_id = #{devicetypeId,jdbcType=INTEGER}
	</if>
	<if test="deviceitemId != null ">
		AND deviceItem_id = #{deviceitemId,jdbcType=INTEGER}
	</if>
	<if test="orderNumber != null ">
		AND orderNumber = #{orderNumber,jdbcType=INTEGER}
	</if>
	<if test="groupId != null ">
		AND group_id = #{groupId,jdbcType=INTEGER}
	</if>
  </sql>
  
  <!-- 用于联表查询 -->
  <resultMap id="CombinedResultMap" type="zst.core.entity.VmsDeviceProperty" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="devicetype_id" property="devicetypeId" jdbcType="INTEGER" />
    <result column="deviceitem_id" property="deviceitemId" jdbcType="INTEGER" />
    <result column="order_number" property="orderNumber" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    
    <result column="deviceitem_name" property="deviceItemName" jdbcType="VARCHAR" />
    <result column="deviceitem_unit" property="deviceItemUnit" jdbcType="VARCHAR" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="expression" property="expression" jdbcType="VARCHAR" />
    <result column="alarm_name" property="alarmName" jdbcType="VARCHAR" />
    <result column="alarm_color" property="alarmColor" jdbcType="VARCHAR" />
    <result column="alarm_level" property="alarmLevel" jdbcType="INTEGER" />
    <result column="threshold_name" property="thresholdName" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 多表查询条件 -->
   <sql id="Combined_Example_Where_Clause">
	where 1=1
	<if test="id != null ">
		AND vms_deviceproperty.id = #{id,jdbcType=INTEGER}
	</if>
	<if test="devicetypeId != null ">
		AND vms_deviceproperty.deviceType_id = #{devicetypeId,jdbcType=INTEGER}
	</if>
	<if test="deviceitemId != null ">
		AND vms_deviceproperty.deviceItem_id = #{deviceitemId,jdbcType=INTEGER}
	</if>
	<if test="orderNumber != null ">
		AND vms_deviceproperty.orderNumber = #{orderNumber,jdbcType=INTEGER}
	</if>
	<if test="groupId != null ">
		AND group_id = #{groupId,jdbcType=INTEGER}
	</if>
	
	 <!-- 模糊查询 -->
     <if test="keywords != null and keywords != ''">
	   and (
		   vms_deviceitem.name LIKE CONCAT(CONCAT('%', #{keywords}),'%')
		   or
		   vms_group.name LIKE CONCAT(CONCAT('%', #{keywords}),'%')
		   or
		   vms_deviceitem.unit LIKE CONCAT(CONCAT('%', #{keywords}),'%')
		   )
     </if>
	
  </sql>
  
  
  <!--查询条数  -->
  <select id="selectCountByObj" parameterType="zst.core.entity.VmsDeviceProperty" resultType="long">
		SELECT COUNT(1) COUN FROM vms_deviceproperty
		<include refid="Example_Where_Clause" />
  </select>
  <!--分页查询  -->
  <select id="selectListByObj" parameterType="zst.core.entity.VmsDeviceProperty" resultMap="BaseResultMap">		
		select <include refid="Base_Column_List" />
			from vms_deviceproperty
		<include refid="Example_Where_Clause" />
		<if test="pagestart >-1 and pageend>0">
			limit #{pagestart},#{pageend}
		</if>
  </select>
  
  
  <!-- 联表查询条数  -->
  <select id="selectCombinedCountByObj" parameterType="zst.core.entity.VmsDeviceProperty" resultType="long">
		SELECT COUNT(1) COUN
		from vms_deviceproperty
			left join
				vms_deviceitem on vms_deviceitem.id = vms_deviceproperty.deviceItem_id
			left join
				vms_group on vms_group.group_id = vms_deviceproperty.group_id
			left join
				vms_threshold on vms_threshold.deviceProperty_id = vms_threshold.id
			left join
				vms_alarmlevel on vms_alarmlevel.level_id = vms_threshold.alarm_level
		<include refid="Combined_Example_Where_Clause" />
  </select>
  <!-- 联表分页查询 -->
   <select id="selectConbinedListByObj" parameterType="zst.core.entity.VmsDeviceProperty" resultMap="CombinedResultMap">		
			select
				vms_deviceproperty.id as id, vms_deviceproperty.deviceType_id as devicetype_id, 
				vms_deviceproperty.deviceItem_id as deviceitem_id, vms_deviceproperty.orderNumber as order_number,
				vms_deviceproperty.group_id as group_id,
				vms_deviceitem.name as deviceitem_name, vms_deviceitem.unit as deviceitem_unit,
				vms_group.name as group_name,
				vms_threshold.expression as expression ,vms_threshold.name as threshold_name,
				vms_alarmlevel.name as alarm_name ,vms_alarmlevel.value as alarm_level ,vms_alarmlevel.color as alarm_color
			from vms_deviceproperty
			left join
				vms_deviceitem on vms_deviceitem.id = vms_deviceproperty.deviceItem_id
			left join
				vms_group on vms_group.group_id = vms_deviceproperty.group_id
			left join
				vms_threshold on vms_threshold.deviceProperty_id = vms_threshold.id
			left join
				vms_alarmlevel on vms_alarmlevel.level_id = vms_threshold.alarm_level
		<include refid="Combined_Example_Where_Clause" />
		<if test="pagestart >-1 and pageend>0">
			limit #{pagestart},#{pageend}
		</if>
  </select>
  
  <!-- 批量添加 -->
  <insert id="addList" parameterType="java.util.List" >
    insert into vms_deviceproperty (deviceType_id, deviceItem_id, orderNumber, group_id)
    values
    <foreach collection="list" item="item" index="index" separator="," >  
        ( #{item.devicetypeId,jdbcType=INTEGER}, #{item.deviceitemId,jdbcType=INTEGER},#{item.orderNumber,jdbcType=INTEGER}, #{item.groupId,jdbcType=INTEGER})
    </foreach> 
  </insert>
  
  <!-- 批量修改 -->
   <update id="updateList" parameterType="java.util.List" >
    	<foreach collection="list" item="item" index="index" open="" close="" separator=";">  
                update vms_deviceproperty   
                <set>  
                  <if test="item.devicetypeId != null" >
			        deviceType_id = #{item.devicetypeId,jdbcType=INTEGER},
			      </if>
			      <if test="item.deviceitemId != null" >
			        deviceItem_id = #{item.deviceitemId,jdbcType=INTEGER},
			      </if>
			      <if test="item.orderNumber != null" >
			        orderNumber = #{item.orderNumber,jdbcType=INTEGER},
			      </if>
			      <if test="item.groupId != null" >
			        group_id = #{item.groupId,jdbcType=INTEGER},
			      </if>
                </set>  
                where id = #{item.id,jdbcType=INTEGER}  
         </foreach> 
  </update>
  
  <!-- 批量删除 -->
    <!-- 假删除数据 -->
  <update id="deleteBatchByIds" parameterType="java.util.List">
	delete from vms_deviceproperty WHERE id in 
	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
		#{item}
	</foreach>
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from vms_deviceproperty
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from vms_deviceproperty
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zst.core.entity.VmsDeviceProperty" >
    insert into vms_deviceproperty (id, deviceType_id, deviceItem_id, 
      orderNumber, group_id)
    values (#{id,jdbcType=INTEGER}, #{devicetypeId,jdbcType=INTEGER}, #{deviceitemId,jdbcType=INTEGER}, 
      #{orderNumber,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="zst.core.entity.VmsDeviceProperty" >
    insert into vms_deviceproperty
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="devicetypeId != null" >
        deviceType_id,
      </if>
      <if test="deviceitemId != null" >
        deviceItem_id,
      </if>
      <if test="orderNumber != null" >
        orderNumber,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="devicetypeId != null" >
        #{devicetypeId,jdbcType=INTEGER},
      </if>
      <if test="deviceitemId != null" >
        #{deviceitemId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zst.core.entity.VmsDeviceProperty" >
    update vms_deviceproperty
    <set >
      <if test="devicetypeId != null" >
        deviceType_id = #{devicetypeId,jdbcType=INTEGER},
      </if>
      <if test="deviceitemId != null" >
        deviceItem_id = #{deviceitemId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null" >
        orderNumber = #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zst.core.entity.VmsDeviceProperty" >
    update vms_deviceproperty
    set deviceType_id = #{devicetypeId,jdbcType=INTEGER},
      deviceItem_id = #{deviceitemId,jdbcType=INTEGER},
      orderNumber = #{orderNumber,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>