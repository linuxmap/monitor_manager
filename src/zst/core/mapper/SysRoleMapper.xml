<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zst.core.dao.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="zst.core.entity.SysRole" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_level" property="roleLevel" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, role_level, create_time, update_time, creator_id, description, status ,category_id ,parent_id
  </sql>
  
  <!-- 查询全部 -->
  <select id="selectAll" resultMap="BaseResultMap" parameterType="zst.core.entity.SysRole" >
    select 
    <include refid="Base_Column_List" />
    from zst_role
    <where>
      <if test="roleId != null" >
        and role_id =  #{roleId,jdbcType=INTEGER}
      </if>
      <if test="roleName != null" >
        and role_name = #{roleName,jdbcType=VARCHAR}
      </if>
      <if test="roleLevel != null" >
        and role_level = #{roleLevel,jdbcType=VARCHAR}
      </if>
      <if test="status != null" >
        and status =  #{status,jdbcType=INTEGER}
      </if>
      <if test="creatorId != null" >
        and creator_id = #{creatorId,jdbcType=INTEGER}
      </if>
      <if test="categoryId != null" >
        and category_id = #{categoryId,jdbcType=INTEGER}
      </if>
      <if test="parentId != null" >
        and parent_id = #{parentId,jdbcType=INTEGER}
      </if>
      </where>
      order by create_time
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zst_role
    where
    	status = 1
    and
    	role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCategoryId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zst_role
    where
    	status = 1
    and
    	category_id = #{categoryId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zst_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  
  <!-- 根据角色类型删除角色 -->
  <delete id="deleteByCategoryId" parameterType="java.lang.Integer" >
    delete from zst_role
    where category_id = #{categoryId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="zst.core.entity.SysRole" useGeneratedKeys="true" keyProperty="roleId">
    insert into zst_role (role_id, role_name,role_level, create_time, 
      update_time, creator_id, description, 
      status,category_id ,parent_id)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleLevel,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="zst.core.entity.SysRole" useGeneratedKeys="true" keyProperty="roleId">
    insert into zst_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleLevel != null" >
        role_level,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null" >
        #{roleLevel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zst.core.entity.SysRole" >
    update zst_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null" >
        role_level = #{roleLevel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zst.core.entity.SysRole" >
    update zst_role
    set 
      role_name = #{roleName,jdbcType=VARCHAR},
      role_level = #{roleLevel,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>