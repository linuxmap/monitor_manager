<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zst.core.dao.SysBaseInfoMapper" >
  <resultMap id="BaseResultMap" type="zst.core.entity.SysBaseInfo" >
    <id column="base_id" property="baseId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="base_group" property="group" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    base_id, name, value, zst_base.group as base_group
  </sql>
  
  <sql id="Example_Where_Clause">
	where 1=1
	<if test="baseId != null ">
		AND base_id = #{baseId,jdbcType=INTEGER}
	</if>
	<if test="name != null and name != '' ">
		AND name = #{name,jdbcType=VARCHAR}
	</if>
	<if test="value != null and value != '' ">
		AND value = #{value,jdbcType=VARCHAR}
	</if>
	<if test="group != null and group != '' ">
		AND zst_base.group = #{group,jdbcType=VARCHAR}
	</if>
  </sql>
  <!--查询条数  -->
  <select id="selectCountByObj" parameterType="zst.core.entity.SysBaseInfo" resultType="long">
		SELECT COUNT(1) COUN FROM zst_base
		<include refid="Example_Where_Clause" />
  </select>
  <!--分页查询  -->
  <select id="selectListByObj" parameterType="zst.core.entity.SysBaseInfo" resultMap="BaseResultMap">		
		select <include refid="Base_Column_List" />
			from zst_base
		<include refid="Example_Where_Clause" />
		<if test="pagestart >-1 and pageend>0">
			limit #{pagestart},#{pageend}
		</if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zst_base
    where base_id = #{baseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zst_base
    where base_id = #{baseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zst.core.entity.SysBaseInfo" >
    insert into zst_base (base_id, name, value, 
      zst_base.group)
    values (#{baseId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{group,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="zst.core.entity.SysBaseInfo" >
    insert into zst_base
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="baseId != null" >
        base_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="group != null" >
        zst_base.group,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="baseId != null" >
        #{baseId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="group != null" >
        #{group,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zst.core.entity.SysBaseInfo" >
    update zst_base
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="group != null" >
        zst_base.group = #{group,jdbcType=VARCHAR},
      </if>
    </set>
    where base_id = #{baseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zst.core.entity.SysBaseInfo" >
    update zst_base
    set name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      zst_base.group = #{group,jdbcType=VARCHAR}
    where base_id = #{baseId,jdbcType=INTEGER}
  </update>
</mapper>